{"ast":null,"code":"var _jsxFileName = \"/Users/zermina/Development/code/mod4/project/boozer-react-project/frontend/src/containers/CocktailIndexContainer.js\";\nimport React from 'react';\nimport './index.css';\nimport Cocktail from '../components/Cocktail';\nexport default class CocktailIndexContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.formatSearch = search => {};\n  }\n\n  render() {\n    let newArray = this.props.cocktails.filter(cocktailObj => {\n      return cocktailObj.name.includes(this.state.search.toUpperCase());\n    });\n    console.log(\"Filtered Array :\", newArray);\n    return React.createElement(\"div\", {\n      className: \"container-fluid scrollbar-primary\",\n      id: \"index-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"search\",\n      onChange: this.handleChange,\n      value: this.state.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"force-overflow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, newArray.map(cocktailObj => {\n      return React.createElement(Cocktail, {\n        key: cocktailObj.name,\n        cocktail: cocktailObj,\n        handleClickedCocktail: this.props.handleClickedCocktail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/zermina/Development/code/mod4/project/boozer-react-project/frontend/src/containers/CocktailIndexContainer.js"],"names":["React","Cocktail","CocktailIndexContainer","Component","state","search","handleChange","event","setState","target","name","value","formatSearch","render","newArray","props","cocktails","filter","cocktailObj","includes","toUpperCase","console","log","map","handleClickedCocktail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAIA,eAAe,MAAMC,sBAAN,SAAqCF,KAAK,CAACG,SAA3C,CAAoD;AAAA;AAAA;AAAA,SAE/DC,KAF+D,GAExD;AACHC,MAAAA,MAAM,EAAE;AADL,KAFwD;;AAAA,SAM/DC,YAN+D,GAMjDC,KAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,OAAd;AAGH,KAV8D;;AAAA,SAY/DC,YAZ+D,GAYjDP,MAAD,IAAU,CAEtB,CAd8D;AAAA;;AAgB/DQ,EAAAA,MAAM,GAAE;AAEJ,QAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4BC,WAAW,IAAI;AACtD,aAAQA,WAAW,CAACR,IAAZ,CAAiBS,QAAjB,CAA2B,KAAKf,KAAL,CAAWC,MAAZ,CAAoBe,WAApB,EAA1B,CAAR;AACH,KAFc,CAAf;AAIFC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,QAAhC;AACE,WACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAmD,MAAA,EAAE,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,KAAKR,YAApC;AAAkD,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGS,QAAQ,CAACS,GAAT,CAAaL,WAAW,IAAE;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,WAAW,CAACR,IAA3B;AAAiC,QAAA,QAAQ,EAAEQ,WAA3C;AAAwD,QAAA,qBAAqB,EAAE,KAAKH,KAAL,CAAWS,qBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,CAFH,CAHJ,CADJ;AAcH;;AArC8D","sourcesContent":["import React from 'react'\nimport './index.css';\nimport Cocktail from '../components/Cocktail'\n\n\n\nexport default class CocktailIndexContainer extends React.Component{\n\n    state ={\n        search: \"\"\n    }\n\n    handleChange=(event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    formatSearch=(search)=>{\n\n    }\n\n    render(){\n\n        let newArray = this.props.cocktails.filter(cocktailObj => {\n            return  cocktailObj.name.includes((this.state.search).toUpperCase())\n        })\n\n      console.log(\"Filtered Array :\", newArray)\n        return(\n            <div className=\"container-fluid scrollbar-primary\" id=\"index-container\">\n                <input name=\"search\" onChange={this.handleChange} value={this.state.search}></input>\n              \n                <div className=\"force-overflow\">\n               {\n                   newArray.map(cocktailObj=>{\n                       return <Cocktail key={cocktailObj.name} cocktail={cocktailObj} handleClickedCocktail={this.props.handleClickedCocktail}/>\n                   })\n               }\n               </div>\n            </div>\n\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}